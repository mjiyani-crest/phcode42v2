{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Samples",
    "coa": {
        "data": {
            "clean": true,
            "code_block": "",
            "description": "",
            "joint": {
                "cells": [
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "80cdf05c-85e5-4460-83e4-19ac772bb77e",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "4473ad50-3af6-4e98-bb53-c8d87932add8",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "8249ec45-73ee-47ac-8a44-3064cb339b59",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 6
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "1b9a6323-0993-4b94-8bc6-a53526241566",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "d81dbe5f-6ab7-4fba-9acc-d7df2f6c1f96",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "52078354-7662-4ec0-b7a0-ff39b7af8202",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 13
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "dd87c3f9-d6f5-4cc4-abd0-705bfda0d564",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "52078354-7662-4ec0-b7a0-ff39b7af8202",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "4473ad50-3af6-4e98-bb53-c8d87932add8",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 16
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "15f17c0e-d4a8-483a-a5ff-1e045b5cf636",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "8f2701fe-1eb3-4fd3-9ec7-82a57189b7a6",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "82d6c619-0e5f-4cd9-a13a-b7a32258fe21",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 35
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "5106deea-fec9-4f70-ba80-a088d5b91b02",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "4e8d602a-2953-468b-8b61-2de9fb6072de",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "e84d85fd-0bb8-4ef0-b9f9-188704981b17",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 69
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "18649cfb-5d40-4985-b2ca-456a066b0c6a",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "e84d85fd-0bb8-4ef0-b9f9-188704981b17",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "2572ef13-e439-46a9-908b-e3d354798b38",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 89
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "eeb04000-111f-4a09-b432-dc4227a94efb",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "3d2f6df0-4fce-4201-b51c-51d4bb2bd4b6",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "30124da0-7a82-4822-ad8a-b16800f7b642",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 93
                    },
                    {
                        "0": "E",
                        "1": "N",
                        "2": "D",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".title": {
                                "text": "END"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_end.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_finish(container, summary):\n    phantom.debug('on_finish() called')\n    # This function is called after all actions are completed.\n    # summary of all the action and/or all details of actions\n    # can be collected here.\n\n    # summary_json = phantom.get_summary()\n    # if 'result' in summary_json:\n        # for action_result in summary_json['result']:\n            # if 'action_run_id' in action_result:\n                # action_results = phantom.get_action_results(action_run_id=action_result['action_run_id'], result_data=False, flatten=False)\n                # phantom.debug(action_results)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "close case, prompt further investigation",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "cef4f5e2-0158-4bf4-a297-cca176bd134b",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 628,
                        "line_start": 615,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 23,
                        "outPorts": [],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2600,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "END",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 109
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "10ee98c6-2da5-440f-ab59-0777434f49bc",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "e84d85fd-0bb8-4ef0-b9f9-188704981b17",
                            "port": "out-4",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(4) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "e0f34c72-b57a-48f3-93f6-488c0b957c7a",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 131
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "db6d8107-51e4-49dd-9f12-41fb30e4d461",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "e84d85fd-0bb8-4ef0-b9f9-188704981b17",
                            "port": "out-3",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(3) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "3d2f6df0-4fce-4201-b51c-51d4bb2bd4b6",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 132
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 2
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-2": {
                                "port": {
                                    "id": "out-3",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": -2
                            },
                            ".outPorts>.port-2>.port-body": {
                                "port": {
                                    "id": "out-3",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-3": {
                                "port": {
                                    "id": "out-4",
                                    "type": "out"
                                },
                                "ref-x": 67,
                                "ref-y": 16
                            },
                            ".outPorts>.port-3>.port-body": {
                                "port": {
                                    "id": "out-4",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.delete image": {
                                "x": 5
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def decision_2(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_2() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"prompt_response_type:action_result.summary.responses.0\", \"==\", \"No response necessary\"],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        join_update_case_2(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # check for 'elif' condition 2\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"prompt_response_type:action_result.summary.responses.0\", \"==\", \"Add user to High Risk\"],\n        ])\n\n    # call connected blocks if condition 2 matched\n    if matched:\n        add_highrisk_employee_1(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # check for 'elif' condition 3\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"prompt_response_type:action_result.summary.responses.0\", \"==\", \"Add user to Legal Hold\"],\n        ])\n\n    # call connected blocks if condition 3 matched\n    if matched:\n        prompt_matter_id(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # check for 'elif' condition 4\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"prompt_response_type:action_result.summary.responses.0\", \"==\", \"Block User\"],\n        ])\n\n    # call connected blocks if condition 4 matched\n    if matched:\n        block_user_1(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "prompt response type",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": false,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "e84d85fd-0bb8-4ef0-b9f9-188704981b17",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 244,
                        "line_start": 187,
                        "name": "decision",
                        "notes": "",
                        "number": 2,
                        "order": 8,
                        "outPorts": [
                            "out-1",
                            "out-2",
                            "out-3",
                            "out-4"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "prompt_response_type:action_result.summary.responses.0",
                                        "value": "No response necessary"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "prompt_response_type:action_result.summary.responses.0",
                                        "value": "Add user to High Risk"
                                    }
                                ],
                                "display": "Else If",
                                "logic": "and",
                                "type": "elif"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "prompt_response_type:action_result.summary.responses.0",
                                        "value": "Add user to Legal Hold"
                                    }
                                ],
                                "display": "Else If",
                                "logic": "and",
                                "type": "elif"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "prompt_response_type:action_result.summary.responses.0",
                                        "value": "Block User"
                                    }
                                ],
                                "display": "Else If",
                                "logic": "and",
                                "type": "elif"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1580,
                            "y": 60
                        },
                        "previous_function": "",
                        "previous_name": "decision_2",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 168
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "2197fd3f-3c0e-4df6-a4d9-f34e5ad48f0d",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "a3c086b3-8b3d-4b49-8cc5-4301af7c1939",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "4d7ff997-e720-4289-a784-cc0a24778769",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 187
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "8e71214a-321d-4380-af5b-f0e0609b5b7f",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "4d7ff997-e720-4289-a784-cc0a24778769",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "cef4f5e2-0158-4bf4-a297-cca176bd134b",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 189
                    },
                    {
                        "action": "close case",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "case_number": "create_case_1:action_result.data.*.number"
                        },
                        "angle": 0,
                        "app": "Code42",
                        "appid": "4d8f53a7-7b12-4d7d-8b01-6575680acf6f",
                        "approver": "",
                        "assets": [
                            {
                                "action": "close case",
                                "actions": [
                                    "get user profile",
                                    "run advanced query",
                                    "run query",
                                    "hunt file",
                                    "add case event",
                                    "list cases",
                                    "close case",
                                    "update case",
                                    "create case",
                                    "remove legalhold custodian",
                                    "add legalhold custodian",
                                    "unblock user",
                                    "reactivate user",
                                    "deactivate user",
                                    "block user",
                                    "create user",
                                    "set alert state",
                                    "search alerts",
                                    "get alert details",
                                    "remove highrisk tag",
                                    "add highrisk tag",
                                    "get highrisk employee",
                                    "list highrisk employees",
                                    "remove highrisk employee",
                                    "add highrisk employee",
                                    "get departing employee",
                                    "list departing employees",
                                    "remove departing employee",
                                    "add departing employee",
                                    "on poll",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Code42",
                                "app_version": "1.0.0",
                                "appid": "4d8f53a7-7b12-4d7d-8b01-6575680acf6f",
                                "asset_name": "code42",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "case_number": "create_case_1:action_result.data.*.number"
                                },
                                "has_app": true,
                                "id": 8,
                                "loaded": false,
                                "missing": false,
                                "name": "code42",
                                "output": [
                                    {
                                        "contains": [
                                            "code42 case number"
                                        ],
                                        "data_path": "action_result.parameter.case_number",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "column_name": "Case number",
                                        "column_order": 0,
                                        "contains": [
                                            "code42 case number"
                                        ],
                                        "data_path": "action_result.data.*.number",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Case name",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Description",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*.description",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Subject",
                                        "column_order": 3,
                                        "contains": [
                                            "email",
                                            "user name"
                                        ],
                                        "data_path": "action_result.data.*.subjectUsername",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Assignee",
                                        "column_order": 4,
                                        "contains": [
                                            "email",
                                            "user name"
                                        ],
                                        "data_path": "action_result.data.*.assigneeUsername",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Findings",
                                        "column_order": 5,
                                        "data_path": "action_result.data.*.findings",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.case_number",
                                        "data_type": "numeric"
                                    }
                                ],
                                "parameters": {
                                    "case_number": {
                                        "contains": [
                                            "case number"
                                        ],
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "Case number",
                                        "key": "case_number",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "Code42",
                                "product_vendor": "Code42",
                                "targets": "8",
                                "type": "generic"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "close case"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def close_case_2(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('close_case_2() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'close_case_2' call\n    results_data_1 = phantom.collect2(container=container, datapath=['create_case_1:action_result.data.*.number', 'create_case_1:action_result.parameter.context.artifact_id'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'close_case_2' call\n    for results_item_1 in results_data_1:\n        if results_item_1[0]:\n            parameters.append({\n                'case_number': results_item_1[0],\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': results_item_1[1]},\n            })\n\n    phantom.act(action=\"close case\", parameters=parameters, assets=['code42'], name=\"close_case_2\", parent_action=action)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "update case",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "4d7ff997-e720-4289-a784-cc0a24778769",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 405,
                        "line_start": 382,
                        "message": "Configuring now",
                        "name": "close case",
                        "notes": "",
                        "number": 2,
                        "order": 14,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2360,
                            "y": 60
                        },
                        "previous_function": "",
                        "previous_name": "close_case_2",
                        "required_params": {
                            "case_number": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 197
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "0504fa5b-9352-4645-b146-43cd0827e289",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "2572ef13-e439-46a9-908b-e3d354798b38",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "a3c086b3-8b3d-4b49-8cc5-4301af7c1939",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 207
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "40cb4a19-bbe7-458c-a04c-3bfb485688b7",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "e84d85fd-0bb8-4ef0-b9f9-188704981b17",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "a3c086b3-8b3d-4b49-8cc5-4301af7c1939",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 208
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "e10fcaa2-73f7-42e7-b0db-24ef2f8ce050",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "e0f34c72-b57a-48f3-93f6-488c0b957c7a",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "a3c086b3-8b3d-4b49-8cc5-4301af7c1939",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 209
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "e75519ae-fbb0-4fcc-b0da-3e38632945f4",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "30124da0-7a82-4822-ad8a-b16800f7b642",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "a3c086b3-8b3d-4b49-8cc5-4301af7c1939",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 210
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "0bedecfd-d2ba-467e-957f-9d7d698ceca0",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "82d6c619-0e5f-4cd9-a13a-b7a32258fe21",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "90854f77-a182-46c5-a191-903412b3eb57",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 220
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "7209c879-6642-44e6-8561-361491a44b31",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "e80f2be9-3d13-409b-9dc6-f73e3d50738c",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "4e8d602a-2953-468b-8b61-2de9fb6072de",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 231
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "ba717f03-a3cd-4edc-8048-e8ecf84f3799",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "90854f77-a182-46c5-a191-903412b3eb57",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "6095991a-c89f-4a4e-803c-590ccfac8bed",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 234
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "9707ecb5-2365-4bd6-9478-f98b1d8cc0e2",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "4c9bd7dc-c9a2-4622-b7be-0832e891cc4c",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "8579bed3-0b4d-4608-bf2e-83b2f3cae822",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 247
                    },
                    {
                        "action": "add highrisk employee",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "note": "",
                            "username": "get_alert_details_1:action_result.summary.username"
                        },
                        "angle": 0,
                        "app": "Code42",
                        "appid": "4d8f53a7-7b12-4d7d-8b01-6575680acf6f",
                        "approver": "",
                        "assets": [
                            {
                                "action": "add highrisk employee",
                                "actions": [
                                    "get user profile",
                                    "run advanced query",
                                    "run query",
                                    "hunt file",
                                    "add case event",
                                    "list cases",
                                    "close case",
                                    "update case",
                                    "create case",
                                    "remove legalhold custodian",
                                    "add legalhold custodian",
                                    "unblock user",
                                    "reactivate user",
                                    "deactivate user",
                                    "block user",
                                    "create user",
                                    "set alert state",
                                    "search alerts",
                                    "get alert details",
                                    "remove highrisk tag",
                                    "add highrisk tag",
                                    "get highrisk employee",
                                    "list highrisk employees",
                                    "remove highrisk employee",
                                    "add highrisk employee",
                                    "get departing employee",
                                    "list departing employees",
                                    "remove departing employee",
                                    "add departing employee",
                                    "on poll",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Code42",
                                "app_version": "1.0.0",
                                "appid": "4d8f53a7-7b12-4d7d-8b01-6575680acf6f",
                                "asset_name": "code42",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "note": "",
                                    "username": "get_alert_details_1:action_result.summary.username"
                                },
                                "has_app": true,
                                "id": 8,
                                "loaded": false,
                                "missing": false,
                                "name": "code42",
                                "output": [
                                    {
                                        "column_name": "Username",
                                        "column_order": 0,
                                        "contains": [
                                            "email",
                                            "user name"
                                        ],
                                        "data_path": "action_result.parameter.username",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Note",
                                        "column_order": 1,
                                        "data_path": "action_result.parameter.note",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "status",
                                        "column_order": 2,
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "column_name": "User ID",
                                        "column_order": 3,
                                        "data_path": "action_result.data.*.userId",
                                        "data_type": "string",
                                        "example_values": [
                                            "1"
                                        ]
                                    },
                                    {
                                        "column_name": "Username",
                                        "column_order": 4,
                                        "contains": [
                                            "email",
                                            "user name"
                                        ],
                                        "data_path": "action_result.data.*.userName",
                                        "data_type": "string",
                                        "example_values": [
                                            "1"
                                        ]
                                    },
                                    {
                                        "column_name": "Created At",
                                        "data_path": "action_result.data.*.createdAt",
                                        "data_type": "string",
                                        "example_values": [
                                            "2021-05-20T19:40:14.8909434Z"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    }
                                ],
                                "parameters": {
                                    "note": {
                                        "data_type": "string",
                                        "default": "",
                                        "description": "A note to include",
                                        "key": "note",
                                        "order": 1,
                                        "primary": false,
                                        "required": false
                                    },
                                    "username": {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_type": "string",
                                        "default": "",
                                        "description": "Username of the employee to add",
                                        "key": "username",
                                        "order": 0,
                                        "primary": true,
                                        "required": true,
                                        "value_list": []
                                    }
                                },
                                "product_name": "Code42",
                                "product_vendor": "Code42",
                                "targets": "8",
                                "type": "generic"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "add highrisk employee"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_highrisk_employee_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_highrisk_employee_1() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'add_highrisk_employee_1' call\n    results_data_1 = phantom.collect2(container=container, datapath=['get_alert_details_1:action_result.summary.username', 'get_alert_details_1:action_result.parameter.context.artifact_id'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'add_highrisk_employee_1' call\n    for results_item_1 in results_data_1:\n        if results_item_1[0]:\n            parameters.append({\n                'note': \"\",\n                'username': results_item_1[0],\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': results_item_1[1]},\n            })\n\n    phantom.act(action=\"add highrisk employee\", parameters=parameters, assets=['code42'], callback=join_update_case_2, name=\"add_highrisk_employee_1\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "prompt response type",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "2572ef13-e439-46a9-908b-e3d354798b38",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 289,
                        "line_start": 265,
                        "message": "Configuring now",
                        "name": "add highrisk employee",
                        "notes": "",
                        "number": 1,
                        "order": 10,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1800,
                            "y": 140
                        },
                        "previous_function": "",
                        "previous_name": "add_highrisk_employee_1",
                        "required_params": {
                            "username": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 264
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "approver": "admin",
                        "approver_display": "admin",
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 4
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def prompt_matter_id(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('prompt_matter_id() called')\n    \n    # set user and message variables for phantom.prompt call\n    user = \"admin\"\n    message = \"\"\"Legal hold matter ID?\"\"\"\n\n    #responses:\n    response_types = [\n        {\n            \"prompt\": \"\",\n            \"options\": {\n                \"type\": \"message\",\n            },\n        },\n    ]\n\n    phantom.prompt2(container=container, user=user, message=message, respond_in_mins=30, name=\"prompt_matter_id\", response_types=response_types, callback=add_legalhold_custodian_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "connected_to_start": true,
                        "connection_name": "prompt response type",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "prompt matter id",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "3d2f6df0-4fce-4201-b51c-51d4bb2bd4b6",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 265,
                        "line_start": 244,
                        "message": "Legal hold matter ID?",
                        "name": "prompt",
                        "notes": "",
                        "number": 4,
                        "order": 9,
                        "outPorts": [
                            "out"
                        ],
                        "parameters": [],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1660,
                            "y": -180
                        },
                        "previous_function": "",
                        "previous_name": "prompt_matter_id",
                        "respond_in": "30",
                        "response_key": "Message",
                        "response_options": [],
                        "response_type": "list",
                        "responses": [
                            {
                                "response_key": "Message",
                                "response_options": [],
                                "response_prompt": "",
                                "response_type": "message"
                            }
                        ],
                        "show_number": true,
                        "size": {
                            "height": 80,
                            "width": 80
                        },
                        "state": "prompt",
                        "status": "",
                        "type": "coa.Prompt",
                        "warn": false,
                        "z": 272
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "format 1"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def format_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('format_1() called')\n    \n    template = \"\"\"Data exfiltration activity has been detected by Code42 for user {0}. File exfiltration details:\n\nFiles:\n{1}\n\nPaths:\n{2}\n\nExposures:\n{3}\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"get_alert_details_1:action_result.data.*.actor\",\n        \"artifact:*.cef.fname\",\n        \"artifact:*.cef.filePath\",\n        \"artifact:*.cef.message\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"format_1\")\n\n    decision_3(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "get user profile",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "feff89fb-d87b-48dd-a6d3-8f7d1f2eabdc",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [
                            "get_user_profile_1",
                            "prompt_5"
                        ],
                        "join_start": 473,
                        "line_end": 490,
                        "line_start": 462,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 1,
                        "order": 17,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "get_alert_details_1:action_result.data.*.actor"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "artifact:*.cef.fname"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "artifact:*.cef.filePath"
                            },
                            {
                                "position": 3,
                                "type": "",
                                "value": "artifact:*.cef.message"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 600,
                            "y": 60
                        },
                        "previous_function": "",
                        "previous_name": "format_1",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "Data exfiltration activity has been detected by Code42 for user {0}. File exfiltration details:\n\nFiles:\n{1}\n\nPaths:\n{2}\n\nExposures:\n{3}",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 277
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 3
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def decision_3(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_3() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"get_user_profile_1:action_result.data.*.managerUsername\", \"!=\", \"\"],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        send_email_1(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # call connected blocks for 'else' condition 2\n    prompt_manager_email(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "get user profile",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": true,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "4c9bd7dc-c9a2-4622-b7be-0832e891cc4c",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 534,
                        "line_start": 513,
                        "name": "decision",
                        "notes": "",
                        "number": 3,
                        "order": 19,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "get_user_profile_1:action_result.data.*.managerUsername",
                                        "value": ""
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 840,
                            "y": 60
                        },
                        "previous_function": "",
                        "previous_name": "decision_3",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 278
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "f0ab1338-590d-4126-94d1-516e4397dd67",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "6095991a-c89f-4a4e-803c-590ccfac8bed",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "feff89fb-d87b-48dd-a6d3-8f7d1f2eabdc",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 279
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "911bc0a3-12c9-42f1-984a-02bdecd995db",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "feff89fb-d87b-48dd-a6d3-8f7d1f2eabdc",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "4c9bd7dc-c9a2-4622-b7be-0832e891cc4c",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 280
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "7944e2d3-5cf1-474a-bbe0-44429b38f03f",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "8579bed3-0b4d-4608-bf2e-83b2f3cae822",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "d7708925-e4bd-4f5a-94e4-b14eff512d54",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 281
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "approver": "admin",
                        "approver_display": "admin",
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 5
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def prompt_manager_email(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('prompt_manager_email() called')\n    \n    # set user and message variables for phantom.prompt call\n    user = \"admin\"\n    message = \"\"\"Unable to find email address for manager of user {0}. \n\nPlease enter manager's email address to send alert notification.\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"get_alert_details_1:action_result.data.*.actor\",\n    ]\n\n    #responses:\n    response_types = [\n        {\n            \"prompt\": \"\",\n            \"options\": {\n                \"type\": \"message\",\n            },\n        },\n    ]\n\n    phantom.prompt2(container=container, user=user, message=message, respond_in_mins=30, name=\"prompt_manager_email\", parameters=parameters, response_types=response_types, callback=send_email_2)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "connected_to_start": true,
                        "connection_name": "get user profile",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "prompt manager email",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "8579bed3-0b4d-4608-bf2e-83b2f3cae822",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 562,
                        "line_start": 534,
                        "message": "Unable to find email address for manager of user {0}. \n\nPlease enter manager's email address to send alert notification.",
                        "name": "prompt",
                        "notes": "",
                        "number": 5,
                        "order": 20,
                        "outPorts": [
                            "out"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "get_alert_details_1:action_result.data.*.actor"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 920,
                            "y": 200
                        },
                        "previous_function": "",
                        "previous_name": "prompt_manager_email",
                        "respond_in": "30",
                        "response_key": "Message",
                        "response_options": [],
                        "response_type": "list",
                        "responses": [
                            {
                                "response_key": "Message",
                                "response_options": [],
                                "response_prompt": "",
                                "response_type": "message"
                            }
                        ],
                        "show_number": true,
                        "size": {
                            "height": 80,
                            "width": 80
                        },
                        "state": "prompt",
                        "status": "",
                        "type": "coa.Prompt",
                        "warn": false,
                        "z": 284
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "46a7c20a-ed2f-417f-acce-39020cc341b0",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "4c9bd7dc-c9a2-4622-b7be-0832e891cc4c",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "e80f2be9-3d13-409b-9dc6-f73e3d50738c",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 289
                    },
                    {
                        "action": "send email",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "attachments": "",
                            "bcc": "",
                            "body": "format_1:formatted_data",
                            "cc": "",
                            "from": "",
                            "headers": "",
                            "subject": "get_alert_details_1:action_result.data.*.name",
                            "to": "prompt_manager_email:action_result.summary.responses.0"
                        },
                        "angle": 0,
                        "app": "SMTP",
                        "appid": "45bb6f37-4478-499b-b4a3-51ecfa62b78c",
                        "approver": "",
                        "assets": [
                            {
                                "action": "send email",
                                "actions": [
                                    "send htmlemail",
                                    "send rawemail",
                                    "send email",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "SMTP",
                                "app_version": "2.0.38",
                                "appid": "45bb6f37-4478-499b-b4a3-51ecfa62b78c",
                                "asset_name": "smtp",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "attachments": "",
                                    "bcc": "",
                                    "body": "format_1:formatted_data",
                                    "cc": "",
                                    "from": "",
                                    "headers": "",
                                    "subject": "get_alert_details_1:action_result.data.*.name",
                                    "to": "prompt_manager_email:action_result.summary.responses.0"
                                },
                                "has_app": true,
                                "id": 10,
                                "loaded": false,
                                "missing": false,
                                "name": "smtp",
                                "output": [
                                    {
                                        "column_name": "Status",
                                        "column_order": 0,
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "vault id"
                                        ],
                                        "data_path": "action_result.parameter.attachments",
                                        "data_type": "string",
                                        "example_values": [
                                            "ab2b2ccfba08ea538ef22f521caa01c3c2b17ccf"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.parameter.bcc",
                                        "data_type": "string",
                                        "example_values": [
                                            "test1@testdomain.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.body",
                                        "data_type": "string",
                                        "example_values": [
                                            "Test body"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.parameter.cc",
                                        "data_type": "string",
                                        "example_values": [
                                            "test2@testdomain.com"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.parameter.from",
                                        "data_type": "string",
                                        "example_values": [
                                            "sender@testdomain.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.headers",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"Subject\": \"Test1\", \"To\": \"test3@testdomain.com\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.subject",
                                        "data_type": "string",
                                        "example_values": [
                                            "Test"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.parameter.to",
                                        "data_type": "string",
                                        "example_values": [
                                            "receiver@testdomain.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Message",
                                        "column_order": 1,
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Email sent"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "attachments": {
                                        "allow_list": true,
                                        "contains": [
                                            "vault id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Vault IDs of files to attach",
                                        "key": "attachments",
                                        "order": 6,
                                        "primary": true,
                                        "required": false
                                    },
                                    "bcc": {
                                        "allow_list": true,
                                        "contains": [
                                            "email"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "List of recipients email addresses to include on bcc line",
                                        "key": "bcc",
                                        "order": 3,
                                        "primary": true,
                                        "required": false
                                    },
                                    "body": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Message body",
                                        "key": "body",
                                        "order": 5,
                                        "required": true
                                    },
                                    "cc": {
                                        "allow_list": true,
                                        "contains": [
                                            "email"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "List of recipients email addresses to include on cc line",
                                        "key": "cc",
                                        "order": 2,
                                        "primary": true,
                                        "required": false
                                    },
                                    "from": {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "From field",
                                        "key": "from",
                                        "order": 0,
                                        "primary": true,
                                        "required": false
                                    },
                                    "headers": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Custom email headers (formatted as JSON)",
                                        "key": "headers",
                                        "order": 7,
                                        "required": false
                                    },
                                    "subject": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Message Subject",
                                        "key": "subject",
                                        "order": 4,
                                        "required": false
                                    },
                                    "to": {
                                        "allow_list": true,
                                        "contains": [
                                            "email"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "List of recipients email addresses",
                                        "key": "to",
                                        "order": 1,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "SMTP",
                                "product_vendor": "Generic",
                                "targets": "10",
                                "type": "email"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "send email 2"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def send_email_2(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('send_email_2() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'send_email_2' call\n    results_data_1 = phantom.collect2(container=container, datapath=['prompt_manager_email:action_result.summary.responses.0', 'prompt_manager_email:action_result.parameter.context.artifact_id'], action_results=results)\n    results_data_2 = phantom.collect2(container=container, datapath=['get_alert_details_1:action_result.data.*.name', 'get_alert_details_1:action_result.parameter.context.artifact_id'], action_results=results)\n    formatted_data_1 = phantom.get_format_data(name='format_1')\n\n    parameters = []\n    \n    # build parameters list for 'send_email_2' call\n    for results_item_1 in results_data_1:\n        for results_item_2 in results_data_2:\n            if results_item_1[0]:\n                parameters.append({\n                    'cc': \"\",\n                    'to': results_item_1[0],\n                    'bcc': \"\",\n                    'body': formatted_data_1,\n                    'from': \"\",\n                    'headers': \"\",\n                    'subject': results_item_2[0],\n                    'attachments': \"\",\n                    # context (artifact id) is added to associate results with the artifact\n                    'context': {'artifact_id': results_item_1[1]},\n                })\n\n    phantom.act(action=\"send email\", parameters=parameters, assets=['smtp'], callback=join_prompt_response_type, name=\"send_email_2\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "prompt manager email",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "d7708925-e4bd-4f5a-94e4-b14eff512d54",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 595,
                        "line_start": 562,
                        "message": "Configuring now",
                        "name": "send email",
                        "notes": "",
                        "number": 2,
                        "order": 21,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1060,
                            "y": 200
                        },
                        "previous_function": "",
                        "previous_name": "send_email_2",
                        "required_params": {
                            "body": true,
                            "to": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 291
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "aa9734e9-9ad9-4cd8-be74-be23f15bb0ab",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "d7708925-e4bd-4f5a-94e4-b14eff512d54",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "4e8d602a-2953-468b-8b61-2de9fb6072de",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 292
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "approver": "admin",
                        "approver_display": "admin",
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 3
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def prompt_response_type(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('prompt_response_type() called')\n    \n    # set user and message variables for phantom.prompt call\n    user = \"admin\"\n    message = \"\"\"What response should be taken for user {0}?\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"get_alert_details_1:action_result.data.*.username\",\n    ]\n\n    #responses:\n    response_types = [\n        {\n            \"prompt\": \"\",\n            \"options\": {\n                \"type\": \"list\",\n                \"choices\": [\n                    \"Add user to Legal Hold\",\n                    \"Add user to High Risk\",\n                    \"Block User\",\n                    \"No response necessary\",\n                ]\n            },\n        },\n    ]\n\n    phantom.prompt2(container=container, user=user, message=message, respond_in_mins=30, name=\"prompt_response_type\", parameters=parameters, response_types=response_types, callback=decision_2)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "connected_to_start": true,
                        "connection_name": "send email 1, send email 2",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "prompt response type",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "4e8d602a-2953-468b-8b61-2de9fb6072de",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "def join_prompt_response_type(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('join_prompt_response_type() called')\n    \n    # if the joined function has already been called, do nothing\n    if phantom.get_run_data(key='join_prompt_response_type_called'):\n        return\n\n    # no callbacks to check, call connected block \"prompt_response_type\"\n    phantom.save_run_data(key='join_prompt_response_type_called', value='prompt_response_type', auto=True)\n\n    prompt_response_type(container=container, handle=handle)\n    \n    return",
                        "join_optional": [
                            "send_email_1",
                            "send_email_2"
                        ],
                        "join_start": 173,
                        "line_end": 187,
                        "line_start": 141,
                        "message": "What response should be taken for user {0}?",
                        "name": "prompt",
                        "notes": "",
                        "number": 3,
                        "order": 7,
                        "outPorts": [
                            "out"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "get_alert_details_1:action_result.data.*.username"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1440,
                            "y": 60
                        },
                        "previous_function": "",
                        "previous_name": "prompt_response_type",
                        "respond_in": "30",
                        "response_key": "Message",
                        "response_options": [],
                        "response_type": "list",
                        "responses": [
                            {
                                "response_key": "Custom List",
                                "response_options": [
                                    "Add user to Legal Hold",
                                    "Add user to High Risk",
                                    "Block User",
                                    "No response necessary"
                                ],
                                "response_prompt": "",
                                "response_type": "list"
                            }
                        ],
                        "show_number": true,
                        "size": {
                            "height": 80,
                            "width": 80
                        },
                        "state": "prompt",
                        "status": "",
                        "type": "coa.Prompt",
                        "warn": false,
                        "z": 293
                    },
                    {
                        "action": "add case event",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "case_number": "create_case_1:action_result.data.*.number",
                            "event_id": "artifact:*.source_data_identifier"
                        },
                        "angle": 0,
                        "app": "Code42",
                        "appid": "4d8f53a7-7b12-4d7d-8b01-6575680acf6f",
                        "approver": "",
                        "assets": [
                            {
                                "action": "add case event",
                                "actions": [
                                    "get user profile",
                                    "run advanced query",
                                    "run query",
                                    "hunt file",
                                    "add case event",
                                    "list cases",
                                    "close case",
                                    "update case",
                                    "create case",
                                    "remove legalhold custodian",
                                    "add legalhold custodian",
                                    "unblock user",
                                    "reactivate user",
                                    "deactivate user",
                                    "block user",
                                    "create user",
                                    "set alert state",
                                    "search alerts",
                                    "get alert details",
                                    "remove highrisk tag",
                                    "add highrisk tag",
                                    "get highrisk employee",
                                    "list highrisk employees",
                                    "remove highrisk employee",
                                    "add highrisk employee",
                                    "get departing employee",
                                    "list departing employees",
                                    "remove departing employee",
                                    "add departing employee",
                                    "on poll",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Code42",
                                "app_version": "1.0.0",
                                "appid": "4d8f53a7-7b12-4d7d-8b01-6575680acf6f",
                                "asset_name": "code42",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "case_number": "create_case_1:action_result.data.*.number",
                                    "event_id": "artifact:*.source_data_identifier"
                                },
                                "has_app": true,
                                "id": 8,
                                "loaded": false,
                                "missing": false,
                                "name": "code42",
                                "output": [
                                    {
                                        "column_name": "Case Number",
                                        "column_order": 0,
                                        "contains": [
                                            "code42 case number"
                                        ],
                                        "data_path": "action_result.parameter.case_number",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Event ID",
                                        "column_order": 1,
                                        "contains": [
                                            "code42 file event"
                                        ],
                                        "data_path": "action_result.parameter.event_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Status",
                                        "column_order": 2,
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.case_number",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.summary.event_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data",
                                        "data_type": "string"
                                    }
                                ],
                                "parameters": {
                                    "case_number": {
                                        "contains": [
                                            "case number"
                                        ],
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "Case number",
                                        "key": "case_number",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "event_id": {
                                        "contains": [
                                            "file event"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Event ID",
                                        "key": "event_id",
                                        "order": 1,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "Code42",
                                "product_vendor": "Code42",
                                "targets": "8",
                                "type": "generic"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "add case event"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_case_event_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_case_event_1() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'add_case_event_1' call\n    container_data = phantom.collect2(container=container, datapath=['artifact:*.source_data_identifier', 'artifact:*.id'])\n    results_data_1 = phantom.collect2(container=container, datapath=['create_case_1:action_result.data.*.number', 'create_case_1:action_result.parameter.context.artifact_id'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'add_case_event_1' call\n    for container_item in container_data:\n        for results_item_1 in results_data_1:\n            if container_item[0] and results_item_1[0]:\n                parameters.append({\n                    'event_id': container_item[0],\n                    'case_number': results_item_1[0],\n                    # context (artifact id) is added to associate results with the artifact\n                    'context': {'artifact_id': container_item[1]},\n                })\n\n    phantom.act(action=\"add case event\", parameters=parameters, assets=['code42'], callback=hunt_file_1, name=\"add_case_event_1\", parent_action=action)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "create case",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "82d6c619-0e5f-4cd9-a13a-b7a32258fe21",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 141,
                        "line_start": 115,
                        "message": "Configuring now",
                        "name": "add case event",
                        "notes": "",
                        "number": 1,
                        "order": 6,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -140,
                            "y": 60
                        },
                        "previous_function": "",
                        "previous_name": "add_case_event_1",
                        "required_params": {
                            "case_number": true,
                            "event_id": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 297
                    },
                    {
                        "action": "hunt file",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "file_name": "add_case_event_1:artifact:*.cef.fname",
                            "hash": "add_case_event_1:artifact:*.cef.fileHashMd5"
                        },
                        "angle": 0,
                        "app": "Code42",
                        "appid": "4d8f53a7-7b12-4d7d-8b01-6575680acf6f",
                        "approver": "",
                        "assets": [
                            {
                                "action": "hunt file",
                                "actions": [
                                    "get user profile",
                                    "run advanced query",
                                    "run query",
                                    "hunt file",
                                    "add case event",
                                    "list cases",
                                    "close case",
                                    "update case",
                                    "create case",
                                    "remove legalhold custodian",
                                    "add legalhold custodian",
                                    "unblock user",
                                    "reactivate user",
                                    "deactivate user",
                                    "block user",
                                    "create user",
                                    "set alert state",
                                    "search alerts",
                                    "get alert details",
                                    "remove highrisk tag",
                                    "add highrisk tag",
                                    "get highrisk employee",
                                    "list highrisk employees",
                                    "remove highrisk employee",
                                    "add highrisk employee",
                                    "get departing employee",
                                    "list departing employees",
                                    "remove departing employee",
                                    "add departing employee",
                                    "on poll",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Code42",
                                "app_version": "1.0.0",
                                "appid": "4d8f53a7-7b12-4d7d-8b01-6575680acf6f",
                                "asset_name": "code42",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "file_name": "add_case_event_1:artifact:*.cef.fname",
                                    "hash": "add_case_event_1:artifact:*.cef.fileHashMd5"
                                },
                                "has_app": true,
                                "id": 8,
                                "loaded": false,
                                "missing": false,
                                "name": "code42",
                                "output": [
                                    {
                                        "column_name": "hash",
                                        "column_order": 0,
                                        "contains": [
                                            "md5",
                                            "sha256"
                                        ],
                                        "data_path": "action_result.parameter.hash",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "status",
                                        "column_order": 1,
                                        "data_path": "action_result.parameter.file_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "status",
                                        "column_order": 2,
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    }
                                ],
                                "parameters": {
                                    "file_name": {
                                        "data_type": "string",
                                        "default": "",
                                        "description": "The name to give to the file after it is downloaded. If not supplied, the hash will be used.",
                                        "key": "file_name",
                                        "order": 1,
                                        "primary": true,
                                        "required": false
                                    },
                                    "hash": {
                                        "contains": [
                                            "md5",
                                            "sha256"
                                        ],
                                        "data_type": "string",
                                        "default": "",
                                        "description": "The md5 or sha256 hash of the file to download",
                                        "key": "hash",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "Code42",
                                "product_vendor": "Code42",
                                "targets": "8",
                                "type": "generic"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "hunt file"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def hunt_file_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('hunt_file_1() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'hunt_file_1' call\n    inputs_data_1 = phantom.collect2(container=container, datapath=['add_case_event_1:artifact:*.cef.fileHashMd5', 'add_case_event_1:artifact:*.cef.fname', 'add_case_event_1:artifact:*.id'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'hunt_file_1' call\n    for inputs_item_1 in inputs_data_1:\n        if inputs_item_1[0]:\n            parameters.append({\n                'hash': inputs_item_1[0],\n                'file_name': inputs_item_1[1],\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': inputs_item_1[2]},\n            })\n\n    phantom.act(action=\"hunt file\", parameters=parameters, assets=['code42'], callback=get_user_profile_1, name=\"hunt_file_1\", parent_action=action)\n\n    return",
                        "callback_code": "",
                        "callback_start": 415,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "add case event",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "90854f77-a182-46c5-a191-903412b3eb57",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 429,
                        "line_start": 405,
                        "message": "Configuring now",
                        "name": "hunt file",
                        "notes": "",
                        "number": 1,
                        "order": 15,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 100,
                            "y": 60
                        },
                        "previous_function": "",
                        "previous_name": "hunt_file_1",
                        "required_params": {
                            "hash": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 298
                    },
                    {
                        "action": "get user profile",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "username": "get_alert_details_1:action_result.data.*.actor"
                        },
                        "angle": 0,
                        "app": "Code42",
                        "appid": "4d8f53a7-7b12-4d7d-8b01-6575680acf6f",
                        "approver": "",
                        "assets": [
                            {
                                "action": "get user profile",
                                "actions": [
                                    "get user profile",
                                    "run advanced query",
                                    "run query",
                                    "hunt file",
                                    "add case event",
                                    "list cases",
                                    "close case",
                                    "update case",
                                    "create case",
                                    "remove legalhold custodian",
                                    "add legalhold custodian",
                                    "get user profile",
                                    "unblock user",
                                    "reactivate user",
                                    "deactivate user",
                                    "block user",
                                    "create user",
                                    "set alert state",
                                    "search alerts",
                                    "get alert details",
                                    "remove highrisk tag",
                                    "add highrisk tag",
                                    "get highrisk employee",
                                    "list highrisk employees",
                                    "remove highrisk employee",
                                    "add highrisk employee",
                                    "get departing employee",
                                    "list departing employees",
                                    "remove departing employee",
                                    "add departing employee",
                                    "on poll",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Code42",
                                "app_version": "1.0.0",
                                "appid": "4d8f53a7-7b12-4d7d-8b01-6575680acf6f",
                                "asset_name": "code42",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "username": "get_alert_details_1:action_result.data.*.actor"
                                },
                                "has_app": true,
                                "id": 8,
                                "loaded": false,
                                "missing": false,
                                "name": "code42",
                                "output": [
                                    {
                                        "column_name": "Username",
                                        "column_order": 0,
                                        "contains": [
                                            "email",
                                            "user name"
                                        ],
                                        "data_path": "action_result.parameter.username",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "status",
                                        "column_order": 1,
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "column_name": "City",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*.city",
                                        "data_type": "string",
                                        "example_values": [
                                            "New York"
                                        ]
                                    },
                                    {
                                        "column_name": "Cloud Username",
                                        "column_order": 3,
                                        "contains": [
                                            "email",
                                            "user name"
                                        ],
                                        "data_path": "action_result.data.*.cloudUsernames.*.username",
                                        "data_type": "string",
                                        "example_values": [
                                            "test@example.com"
                                        ]
                                    },
                                    {
                                        "column_name": "Country",
                                        "column_order": 4,
                                        "data_path": "action_result.data.*.country",
                                        "data_type": "string",
                                        "example_values": [
                                            "US"
                                        ]
                                    },
                                    {
                                        "column_name": "Department",
                                        "column_order": 5,
                                        "data_path": "action_result.data.*.department",
                                        "data_type": "string",
                                        "example_values": [
                                            "Sales"
                                        ]
                                    },
                                    {
                                        "column_name": "Display Name",
                                        "column_order": 6,
                                        "data_path": "action_result.data.*.displayName",
                                        "data_type": "string",
                                        "example_values": [
                                            "Jane Doe"
                                        ]
                                    },
                                    {
                                        "column_name": "Manager Display Name",
                                        "column_order": 7,
                                        "data_path": "action_result.data.*.managerDisplayName",
                                        "data_type": "string",
                                        "example_values": [
                                            "Jane Doe"
                                        ]
                                    },
                                    {
                                        "column_name": "Manager Username",
                                        "column_order": 8,
                                        "contains": [
                                            "email",
                                            "user name"
                                        ],
                                        "data_path": "action_result.data.*.managerUsername",
                                        "data_type": "string",
                                        "example_values": [
                                            "test@example.com"
                                        ]
                                    },
                                    {
                                        "column_name": "Risk Tag",
                                        "column_order": 9,
                                        "data_path": "action_result.data.*.riskFactors.*.tag",
                                        "data_type": "string",
                                        "example_values": [
                                            "FLIGHT_RISK"
                                        ]
                                    },
                                    {
                                        "column_name": "State",
                                        "column_order": 10,
                                        "data_path": "action_result.data.*.state",
                                        "data_type": "string",
                                        "example_values": [
                                            "AZ"
                                        ]
                                    },
                                    {
                                        "column_name": "Title",
                                        "column_order": 11,
                                        "data_path": "action_result.data.*.title",
                                        "data_type": "string",
                                        "example_values": [
                                            "Vice President"
                                        ]
                                    },
                                    {
                                        "column_name": "User ID",
                                        "column_order": 12,
                                        "data_path": "action_result.data.*.userId",
                                        "data_type": "string",
                                        "example_values": [
                                            "1"
                                        ]
                                    },
                                    {
                                        "column_name": "Username",
                                        "column_order": 13,
                                        "contains": [
                                            "email",
                                            "user name"
                                        ],
                                        "data_path": "action_result.data.*.userName",
                                        "data_type": "string",
                                        "example_values": [
                                            "test@example.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    }
                                ],
                                "parameters": {
                                    "username": {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "The username associated with the user profile to get",
                                        "key": "username",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "Code42",
                                "product_vendor": "Code42",
                                "targets": "8",
                                "type": "generic"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "get user profile"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def get_user_profile_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('get_user_profile_1() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'get_user_profile_1' call\n    results_data_1 = phantom.collect2(container=container, datapath=['get_alert_details_1:action_result.data.*.actor', 'get_alert_details_1:action_result.parameter.context.artifact_id'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'get_user_profile_1' call\n    for results_item_1 in results_data_1:\n        if results_item_1[0]:\n            parameters.append({\n                'username': results_item_1[0],\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': results_item_1[1]},\n            })\n\n    phantom.act(action=\"get user profile\", parameters=parameters, assets=['code42'], callback=format_1, name=\"get_user_profile_1\", parent_action=action)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "hunt file",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "6095991a-c89f-4a4e-803c-590ccfac8bed",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 513,
                        "line_start": 490,
                        "message": "Configuring now",
                        "name": "get user profile",
                        "notes": "",
                        "number": 1,
                        "order": 18,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 340,
                            "y": 60
                        },
                        "previous_function": "",
                        "previous_name": "get_user_profile_1",
                        "required_params": {
                            "username": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 299
                    },
                    {
                        "action": "send email",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "attachments": "",
                            "bcc": "",
                            "body": "format_1:formatted_data",
                            "cc": "",
                            "from": "",
                            "headers": "",
                            "subject": "get_alert_details_1:action_result.data.*.name",
                            "to": "get_user_profile_1:action_result.data.*.managerUsername"
                        },
                        "angle": 0,
                        "app": "SMTP",
                        "appid": "45bb6f37-4478-499b-b4a3-51ecfa62b78c",
                        "approver": "",
                        "assets": [
                            {
                                "action": "send email",
                                "actions": [
                                    "send htmlemail",
                                    "send rawemail",
                                    "send email",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "SMTP",
                                "app_version": "2.0.38",
                                "appid": "45bb6f37-4478-499b-b4a3-51ecfa62b78c",
                                "asset_name": "smtp",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "attachments": "",
                                    "bcc": "",
                                    "body": "format_1:formatted_data",
                                    "cc": "",
                                    "from": "",
                                    "headers": "",
                                    "subject": "get_alert_details_1:action_result.data.*.name",
                                    "to": "get_user_profile_1:action_result.data.*.managerUsername"
                                },
                                "has_app": true,
                                "id": 10,
                                "loaded": false,
                                "missing": false,
                                "name": "smtp",
                                "output": [
                                    {
                                        "column_name": "Status",
                                        "column_order": 0,
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "vault id"
                                        ],
                                        "data_path": "action_result.parameter.attachments",
                                        "data_type": "string",
                                        "example_values": [
                                            "ab2b2ccfba08ea538ef22f521caa01c3c2b17ccf"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.parameter.bcc",
                                        "data_type": "string",
                                        "example_values": [
                                            "test1@testdomain.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.body",
                                        "data_type": "string",
                                        "example_values": [
                                            "Test body"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.parameter.cc",
                                        "data_type": "string",
                                        "example_values": [
                                            "test2@testdomain.com"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.parameter.from",
                                        "data_type": "string",
                                        "example_values": [
                                            "sender@testdomain.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.headers",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"Subject\": \"Test1\", \"To\": \"test3@testdomain.com\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.subject",
                                        "data_type": "string",
                                        "example_values": [
                                            "Test"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.parameter.to",
                                        "data_type": "string",
                                        "example_values": [
                                            "receiver@testdomain.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Message",
                                        "column_order": 1,
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Email sent"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "attachments": {
                                        "allow_list": true,
                                        "contains": [
                                            "vault id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Vault IDs of files to attach",
                                        "key": "attachments",
                                        "order": 6,
                                        "primary": true,
                                        "required": false
                                    },
                                    "bcc": {
                                        "allow_list": true,
                                        "contains": [
                                            "email"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "List of recipients email addresses to include on bcc line",
                                        "key": "bcc",
                                        "order": 3,
                                        "primary": true,
                                        "required": false
                                    },
                                    "body": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Message body",
                                        "key": "body",
                                        "order": 5,
                                        "required": true
                                    },
                                    "cc": {
                                        "allow_list": true,
                                        "contains": [
                                            "email"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "List of recipients email addresses to include on cc line",
                                        "key": "cc",
                                        "order": 2,
                                        "primary": true,
                                        "required": false
                                    },
                                    "from": {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "From field",
                                        "key": "from",
                                        "order": 0,
                                        "primary": true,
                                        "required": false
                                    },
                                    "headers": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Custom email headers (formatted as JSON)",
                                        "key": "headers",
                                        "order": 7,
                                        "required": false
                                    },
                                    "subject": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Message Subject",
                                        "key": "subject",
                                        "order": 4,
                                        "required": false
                                    },
                                    "to": {
                                        "allow_list": true,
                                        "contains": [
                                            "email"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "List of recipients email addresses",
                                        "key": "to",
                                        "order": 1,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "SMTP",
                                "product_vendor": "Generic",
                                "targets": "10",
                                "type": "email"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "send email 1"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def send_email_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('send_email_1() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'send_email_1' call\n    results_data_1 = phantom.collect2(container=container, datapath=['get_user_profile_1:action_result.data.*.managerUsername', 'get_user_profile_1:action_result.parameter.context.artifact_id'], action_results=results)\n    results_data_2 = phantom.collect2(container=container, datapath=['get_alert_details_1:action_result.data.*.name', 'get_alert_details_1:action_result.parameter.context.artifact_id'], action_results=results)\n    formatted_data_1 = phantom.get_format_data(name='format_1')\n\n    parameters = []\n    \n    # build parameters list for 'send_email_1' call\n    for results_item_1 in results_data_1:\n        for results_item_2 in results_data_2:\n            if results_item_1[0]:\n                parameters.append({\n                    'cc': \"\",\n                    'to': results_item_1[0],\n                    'bcc': \"\",\n                    'body': formatted_data_1,\n                    'from': \"\",\n                    'headers': \"\",\n                    'subject': results_item_2[0],\n                    'attachments': \"\",\n                    # context (artifact id) is added to associate results with the artifact\n                    'context': {'artifact_id': results_item_1[1]},\n                })\n\n    phantom.act(action=\"send email\", parameters=parameters, assets=['smtp'], callback=join_prompt_response_type, name=\"send_email_1\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "get user profile",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "e80f2be9-3d13-409b-9dc6-f73e3d50738c",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 462,
                        "line_start": 429,
                        "message": "Configuring now",
                        "name": "send email",
                        "notes": "",
                        "number": 1,
                        "order": 16,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1060,
                            "y": 60
                        },
                        "previous_function": "",
                        "previous_name": "send_email_1",
                        "required_params": {
                            "body": true,
                            "to": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 300
                    },
                    {
                        "action": "get alert details",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "alert_id": "container:source_data_identifier"
                        },
                        "angle": 0,
                        "app": "Code42",
                        "appid": "4d8f53a7-7b12-4d7d-8b01-6575680acf6f",
                        "approver": "",
                        "assets": [
                            {
                                "action": "get alert details",
                                "actions": [
                                    "get user profile",
                                    "run advanced query",
                                    "run query",
                                    "hunt file",
                                    "add case event",
                                    "list cases",
                                    "close case",
                                    "update case",
                                    "create case",
                                    "remove legalhold custodian",
                                    "add legalhold custodian",
                                    "unblock user",
                                    "reactivate user",
                                    "deactivate user",
                                    "block user",
                                    "create user",
                                    "set alert state",
                                    "search alerts",
                                    "get alert details",
                                    "remove highrisk tag",
                                    "add highrisk tag",
                                    "get highrisk employee",
                                    "list highrisk employees",
                                    "remove highrisk employee",
                                    "add highrisk employee",
                                    "get departing employee",
                                    "list departing employees",
                                    "remove departing employee",
                                    "add departing employee",
                                    "on poll",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Code42",
                                "app_version": "1.0.0",
                                "appid": "4d8f53a7-7b12-4d7d-8b01-6575680acf6f",
                                "asset_name": "code42",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "alert_id": "container:source_data_identifier"
                                },
                                "has_app": true,
                                "id": 8,
                                "loaded": false,
                                "missing": false,
                                "name": "code42",
                                "output": [
                                    {
                                        "column_name": "Alert ID",
                                        "column_order": 0,
                                        "data_path": "action_result.parameter.alert_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Name",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Actor",
                                        "column_order": 2,
                                        "contains": [
                                            "email",
                                            "user name"
                                        ],
                                        "data_path": "action_result.data.*.actor",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.data.*.actorId",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Created At",
                                        "column_order": 3,
                                        "data_path": "action_result.data.*.createdAt",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Description",
                                        "column_order": 4,
                                        "data_path": "action_result.data.*.description",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "State",
                                        "column_order": 5,
                                        "data_path": "action_result.data.*.state",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Type",
                                        "column_order": 6,
                                        "data_path": "action_result.data.*.type",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Severity",
                                        "column_order": 7,
                                        "data_path": "action_result.data.*.severity",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Username",
                                        "contains": [
                                            "email",
                                            "user name"
                                        ],
                                        "data_path": "action_result.summary.username",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "User Id",
                                        "data_path": "action_result.summary.user_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    }
                                ],
                                "parameters": {
                                    "alert_id": {
                                        "data_type": "string",
                                        "default": "",
                                        "description": "ID of the alert to retrieve",
                                        "key": "alert_id",
                                        "order": 0,
                                        "primary": true,
                                        "required": true,
                                        "value_list": []
                                    }
                                },
                                "product_name": "Code42",
                                "product_vendor": "Code42",
                                "targets": "8",
                                "type": "generic"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "get alert details"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def get_alert_details_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('get_alert_details_1() called')\n\n    source_data_identifier_value = container.get('source_data_identifier', None)\n\n    # collect data for 'get_alert_details_1' call\n\n    parameters = []\n    \n    # build parameters list for 'get_alert_details_1' call\n    parameters.append({\n        'alert_id': source_data_identifier_value,\n    })\n\n    phantom.act(action=\"get alert details\", parameters=parameters, assets=['code42'], callback=prompt_further_investigation, name=\"get_alert_details_1\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": "0",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "4473ad50-3af6-4e98-bb53-c8d87932add8",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 34,
                        "line_end": 33,
                        "line_start": 15,
                        "message": "Configuring now",
                        "name": "get alert details",
                        "notes": "",
                        "number": 1,
                        "order": 2,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -920,
                            "y": 60
                        },
                        "previous_function": "",
                        "previous_name": "get_alert_details_1",
                        "required_params": {
                            "alert_id": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 301
                    },
                    {
                        "action": "block user",
                        "action_type": "contain",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "username": "get_alert_details_1:action_result.data.*.username"
                        },
                        "angle": 0,
                        "app": "Code42",
                        "appid": "4d8f53a7-7b12-4d7d-8b01-6575680acf6f",
                        "approver": "",
                        "assets": [
                            {
                                "action": "block user",
                                "actions": [
                                    "get user profile",
                                    "run advanced query",
                                    "run query",
                                    "hunt file",
                                    "add case event",
                                    "list cases",
                                    "close case",
                                    "update case",
                                    "create case",
                                    "remove legalhold custodian",
                                    "add legalhold custodian",
                                    "unblock user",
                                    "reactivate user",
                                    "deactivate user",
                                    "block user",
                                    "create user",
                                    "set alert state",
                                    "search alerts",
                                    "get alert details",
                                    "remove highrisk tag",
                                    "add highrisk tag",
                                    "get highrisk employee",
                                    "list highrisk employees",
                                    "remove highrisk employee",
                                    "add highrisk employee",
                                    "get departing employee",
                                    "list departing employees",
                                    "remove departing employee",
                                    "add departing employee",
                                    "on poll",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Code42",
                                "app_version": "1.0.0",
                                "appid": "4d8f53a7-7b12-4d7d-8b01-6575680acf6f",
                                "asset_name": "code42",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "username": "get_alert_details_1:action_result.data.*.username"
                                },
                                "has_app": true,
                                "id": 8,
                                "loaded": false,
                                "missing": false,
                                "name": "code42",
                                "output": [
                                    {
                                        "column_name": "Username",
                                        "column_order": 0,
                                        "contains": [
                                            "email",
                                            "user name"
                                        ],
                                        "data_path": "action_result.parameter.username",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "status",
                                        "column_order": 1,
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    }
                                ],
                                "parameters": {
                                    "username": {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_type": "string",
                                        "default": "",
                                        "description": "Username to block",
                                        "key": "username",
                                        "order": 0,
                                        "primary": true,
                                        "required": true,
                                        "value_list": []
                                    }
                                },
                                "product_name": "Code42",
                                "product_vendor": "Code42",
                                "targets": "8",
                                "type": "generic"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "block user"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Contain"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_contain.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def block_user_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('block_user_1() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'block_user_1' call\n    results_data_1 = phantom.collect2(container=container, datapath=['get_alert_details_1:action_result.data.*.username', 'get_alert_details_1:action_result.parameter.context.artifact_id'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'block_user_1' call\n    for results_item_1 in results_data_1:\n        if results_item_1[0]:\n            parameters.append({\n                'username': results_item_1[0],\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': results_item_1[1]},\n            })\n\n    phantom.act(action=\"block user\", parameters=parameters, assets=['code42'], callback=join_update_case_2, name=\"block_user_1\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "prompt response type",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "e0f34c72-b57a-48f3-93f6-488c0b957c7a",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 312,
                        "line_start": 289,
                        "message": "Configuring now",
                        "name": "block user",
                        "notes": "",
                        "number": 1,
                        "order": 11,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1800,
                            "y": -40
                        },
                        "previous_function": "",
                        "previous_name": "block_user_1",
                        "required_params": {
                            "username": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Contain",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 302
                    },
                    {
                        "action": "update case",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "assignee": "",
                            "case_name": "",
                            "case_number": "create_case_1:action_result.data.*.number",
                            "description": "",
                            "findings": "prompt_response_type:action_result.summary.responses.0",
                            "subject": ""
                        },
                        "angle": 0,
                        "app": "Code42",
                        "appid": "4d8f53a7-7b12-4d7d-8b01-6575680acf6f",
                        "approver": "",
                        "assets": [
                            {
                                "action": "update case",
                                "actions": [
                                    "get user profile",
                                    "run advanced query",
                                    "run query",
                                    "hunt file",
                                    "add case event",
                                    "list cases",
                                    "close case",
                                    "update case",
                                    "create case",
                                    "remove legalhold custodian",
                                    "add legalhold custodian",
                                    "unblock user",
                                    "reactivate user",
                                    "deactivate user",
                                    "block user",
                                    "create user",
                                    "set alert state",
                                    "search alerts",
                                    "get alert details",
                                    "remove highrisk tag",
                                    "add highrisk tag",
                                    "get highrisk employee",
                                    "list highrisk employees",
                                    "remove highrisk employee",
                                    "add highrisk employee",
                                    "get departing employee",
                                    "list departing employees",
                                    "remove departing employee",
                                    "add departing employee",
                                    "on poll",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Code42",
                                "app_version": "1.0.0",
                                "appid": "4d8f53a7-7b12-4d7d-8b01-6575680acf6f",
                                "asset_name": "code42",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "assignee": "",
                                    "case_name": "",
                                    "case_number": "create_case_1:action_result.data.*.number",
                                    "description": "",
                                    "findings": "prompt_response_type:action_result.summary.responses.0",
                                    "subject": ""
                                },
                                "has_app": true,
                                "id": 8,
                                "loaded": false,
                                "missing": false,
                                "name": "code42",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "code42 case number"
                                        ],
                                        "data_path": "action_result.parameter.case_number",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.parameter.case_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.description",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "email",
                                            "user name"
                                        ],
                                        "data_path": "action_result.parameter.subject",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "email",
                                            "user name"
                                        ],
                                        "data_path": "action_result.parameter.assignee",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.findings",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Case number",
                                        "column_order": 0,
                                        "contains": [
                                            "code42 case number"
                                        ],
                                        "data_path": "action_result.data.*.number",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Case name",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Description",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*.description",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Subject",
                                        "column_order": 3,
                                        "contains": [
                                            "email",
                                            "user name"
                                        ],
                                        "data_path": "action_result.data.*.subjectUsername",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Assignee",
                                        "column_order": 4,
                                        "contains": [
                                            "email",
                                            "user name"
                                        ],
                                        "data_path": "action_result.data.*.assigneeUsername",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Findings",
                                        "column_order": 5,
                                        "data_path": "action_result.data.*.findings",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.case_number",
                                        "data_type": "numeric"
                                    }
                                ],
                                "parameters": {
                                    "assignee": {
                                        "contains": [
                                            "email",
                                            "user name"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Assignee",
                                        "key": "assignee",
                                        "order": 4,
                                        "primary": true,
                                        "required": false
                                    },
                                    "case_name": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Case name",
                                        "key": "case_name",
                                        "order": 1,
                                        "primary": false,
                                        "required": false
                                    },
                                    "case_number": {
                                        "contains": [
                                            "case number"
                                        ],
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "Case number",
                                        "key": "case_number",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "description": {
                                        "data_type": "string",
                                        "default": "",
                                        "description": "Description",
                                        "key": "description",
                                        "order": 2,
                                        "primary": false,
                                        "required": false
                                    },
                                    "findings": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Findings (markdown)",
                                        "key": "findings",
                                        "order": 5,
                                        "primary": false,
                                        "required": false
                                    },
                                    "subject": {
                                        "contains": [
                                            "email",
                                            "user name"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Subject",
                                        "key": "subject",
                                        "order": 3,
                                        "primary": true,
                                        "required": false
                                    }
                                },
                                "product_name": "Code42",
                                "product_vendor": "Code42",
                                "targets": "8",
                                "type": "generic"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "update case"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def update_case_2(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('update_case_2() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'update_case_2' call\n    results_data_1 = phantom.collect2(container=container, datapath=['prompt_response_type:action_result.summary.responses.0', 'prompt_response_type:action_result.parameter.context.artifact_id'], action_results=results)\n    results_data_2 = phantom.collect2(container=container, datapath=['create_case_1:action_result.data.*.number', 'create_case_1:action_result.parameter.context.artifact_id'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'update_case_2' call\n    for results_item_1 in results_data_1:\n        for results_item_2 in results_data_2:\n            if results_item_2[0]:\n                parameters.append({\n                    'subject': \"\",\n                    'assignee': \"\",\n                    'findings': results_item_1[0],\n                    'case_name': \"\",\n                    'case_number': results_item_2[0],\n                    'description': \"\",\n                    # context (artifact id) is added to associate results with the artifact\n                    'context': {'artifact_id': results_item_1[1]},\n                })\n\n    phantom.act(action=\"update case\", parameters=parameters, assets=['code42'], callback=close_case_2, name=\"update_case_2\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "add highrisk employee, prompt response type, block user, add legalhold custodian",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "a3c086b3-8b3d-4b49-8cc5-4301af7c1939",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "def join_update_case_2(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('join_update_case_2() called')\n    \n    # if the joined function has already been called, do nothing\n    if phantom.get_run_data(key='join_update_case_2_called'):\n        return\n\n    # no callbacks to check, call connected block \"update_case_2\"\n    phantom.save_run_data(key='join_update_case_2_called', value='update_case_2', auto=True)\n\n    update_case_2(container=container, handle=handle)\n    \n    return",
                        "join_optional": [
                            "add_highrisk_employee_1",
                            "prompt_response_type",
                            "block_user_1",
                            "add_legalhold_custodian_1"
                        ],
                        "join_start": 368,
                        "line_end": 382,
                        "line_start": 338,
                        "message": "Configuring now",
                        "name": "update case",
                        "notes": "",
                        "number": 2,
                        "order": 13,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2120,
                            "y": 60
                        },
                        "previous_function": "",
                        "previous_name": "update_case_2",
                        "required_params": {
                            "case_number": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 303
                    },
                    {
                        "action": "add legalhold custodian",
                        "action_type": "contain",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "matter_id": "prompt_matter_id:action_result.summary.responses.0",
                            "username": "get_alert_details_1:action_result.data.*.username"
                        },
                        "angle": 0,
                        "app": "Code42",
                        "appid": "4d8f53a7-7b12-4d7d-8b01-6575680acf6f",
                        "approver": "",
                        "assets": [
                            {
                                "action": "add legalhold custodian",
                                "actions": [
                                    "get user profile",
                                    "run advanced query",
                                    "run query",
                                    "hunt file",
                                    "add case event",
                                    "list cases",
                                    "close case",
                                    "update case",
                                    "create case",
                                    "remove legalhold custodian",
                                    "add legalhold custodian",
                                    "unblock user",
                                    "reactivate user",
                                    "deactivate user",
                                    "block user",
                                    "create user",
                                    "set alert state",
                                    "search alerts",
                                    "get alert details",
                                    "remove highrisk tag",
                                    "add highrisk tag",
                                    "get highrisk employee",
                                    "list highrisk employees",
                                    "remove highrisk employee",
                                    "add highrisk employee",
                                    "get departing employee",
                                    "list departing employees",
                                    "remove departing employee",
                                    "add departing employee",
                                    "on poll",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Code42",
                                "app_version": "1.0.0",
                                "appid": "4d8f53a7-7b12-4d7d-8b01-6575680acf6f",
                                "asset_name": "code42",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "matter_id": "prompt_matter_id:action_result.summary.responses.0",
                                    "username": "get_alert_details_1:action_result.data.*.username"
                                },
                                "has_app": true,
                                "id": 8,
                                "loaded": false,
                                "missing": false,
                                "name": "code42",
                                "output": [
                                    {
                                        "column_name": "username",
                                        "column_order": 0,
                                        "contains": [
                                            "email",
                                            "user name"
                                        ],
                                        "data_path": "action_result.parameter.username",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "matter_id",
                                        "column_order": 1,
                                        "data_path": "action_result.parameter.matter_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "status",
                                        "column_order": 2,
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data",
                                        "data_type": "string"
                                    }
                                ],
                                "parameters": {
                                    "matter_id": {
                                        "data_type": "string",
                                        "default": "",
                                        "description": "The identifier of the legal hold matter",
                                        "key": "matter_id",
                                        "order": 1,
                                        "primary": true,
                                        "required": true,
                                        "value_list": []
                                    },
                                    "username": {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_type": "string",
                                        "default": "",
                                        "description": "Username of user to be added to legal hold matter",
                                        "key": "username",
                                        "order": 0,
                                        "primary": true,
                                        "required": true,
                                        "value_list": []
                                    }
                                },
                                "product_name": "Code42",
                                "product_vendor": "Code42",
                                "targets": "8",
                                "type": "generic"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "add legalhold custodian"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Contain"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_contain.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_legalhold_custodian_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_legalhold_custodian_1() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'add_legalhold_custodian_1' call\n    results_data_1 = phantom.collect2(container=container, datapath=['get_alert_details_1:action_result.data.*.username', 'get_alert_details_1:action_result.parameter.context.artifact_id'], action_results=results)\n    results_data_2 = phantom.collect2(container=container, datapath=['prompt_matter_id:action_result.summary.responses.0', 'prompt_matter_id:action_result.parameter.context.artifact_id'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'add_legalhold_custodian_1' call\n    for results_item_1 in results_data_1:\n        for results_item_2 in results_data_2:\n            if results_item_1[0] and results_item_2[0]:\n                parameters.append({\n                    'username': results_item_1[0],\n                    'matter_id': results_item_2[0],\n                    # context (artifact id) is added to associate results with the artifact\n                    'context': {'artifact_id': results_item_1[1]},\n                })\n\n    phantom.act(action=\"add legalhold custodian\", parameters=parameters, assets=['code42'], callback=join_update_case_2, name=\"add_legalhold_custodian_1\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "prompt matter id",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "30124da0-7a82-4822-ad8a-b16800f7b642",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 338,
                        "line_start": 312,
                        "message": "Configuring now",
                        "name": "add legalhold custodian",
                        "notes": "",
                        "number": 1,
                        "order": 12,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1800,
                            "y": -180
                        },
                        "previous_function": "",
                        "previous_name": "add_legalhold_custodian_1",
                        "required_params": {
                            "matter_id": true,
                            "username": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Contain",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 304
                    },
                    {
                        "action": "create case",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "assignee": "",
                            "case_name": "prompt_further_investigation:action_result.summary.responses.1",
                            "description": "",
                            "findings": "",
                            "subject": "get_alert_details_1:action_result.data.*.actor"
                        },
                        "angle": 0,
                        "app": "Code42",
                        "appid": "4d8f53a7-7b12-4d7d-8b01-6575680acf6f",
                        "approver": "",
                        "assets": [
                            {
                                "action": "create case",
                                "actions": [
                                    "get user profile",
                                    "run advanced query",
                                    "run query",
                                    "hunt file",
                                    "add case event",
                                    "list cases",
                                    "close case",
                                    "update case",
                                    "create case",
                                    "remove legalhold custodian",
                                    "add legalhold custodian",
                                    "unblock user",
                                    "reactivate user",
                                    "deactivate user",
                                    "block user",
                                    "create user",
                                    "set alert state",
                                    "search alerts",
                                    "get alert details",
                                    "remove highrisk tag",
                                    "add highrisk tag",
                                    "get highrisk employee",
                                    "list highrisk employees",
                                    "remove highrisk employee",
                                    "add highrisk employee",
                                    "get departing employee",
                                    "list departing employees",
                                    "remove departing employee",
                                    "add departing employee",
                                    "on poll",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Code42",
                                "app_version": "1.0.0",
                                "appid": "4d8f53a7-7b12-4d7d-8b01-6575680acf6f",
                                "asset_name": "code42",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "assignee": "",
                                    "case_name": "prompt_further_investigation:action_result.summary.responses.1",
                                    "description": "",
                                    "findings": "",
                                    "subject": "get_alert_details_1:action_result.data.*.actor"
                                },
                                "has_app": true,
                                "id": 8,
                                "loaded": false,
                                "missing": false,
                                "name": "code42",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Case number",
                                        "column_order": 0,
                                        "contains": [
                                            "code42 case number"
                                        ],
                                        "data_path": "action_result.data.*.number",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Case name",
                                        "column_order": 1,
                                        "data_path": "action_result.parameter.case_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Description",
                                        "column_order": 2,
                                        "data_path": "action_result.parameter.description",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Subject",
                                        "column_order": 3,
                                        "contains": [
                                            "email",
                                            "user name"
                                        ],
                                        "data_path": "action_result.parameter.subject",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Assignee",
                                        "column_order": 4,
                                        "contains": [
                                            "email",
                                            "user name"
                                        ],
                                        "data_path": "action_result.parameter.assignee",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Findings",
                                        "column_order": 5,
                                        "data_path": "action_result.parameter.findings",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.case_number",
                                        "data_type": "numeric"
                                    }
                                ],
                                "parameters": {
                                    "assignee": {
                                        "contains": [
                                            "email",
                                            "user name"
                                        ],
                                        "data_type": "string",
                                        "default": "",
                                        "description": "Assignee (username)",
                                        "key": "assignee",
                                        "order": 3,
                                        "primary": true,
                                        "required": false
                                    },
                                    "case_name": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Case name",
                                        "key": "case_name",
                                        "order": 0,
                                        "primary": false,
                                        "required": true
                                    },
                                    "description": {
                                        "data_type": "string",
                                        "default": "",
                                        "description": "Description",
                                        "key": "description",
                                        "order": 2,
                                        "primary": false,
                                        "required": false
                                    },
                                    "findings": {
                                        "data_type": "string",
                                        "default": "",
                                        "description": "Findings (markdown text)",
                                        "key": "findings",
                                        "order": 4,
                                        "primary": false,
                                        "required": false
                                    },
                                    "subject": {
                                        "contains": [
                                            "email",
                                            "user name"
                                        ],
                                        "data_type": "string",
                                        "default": "",
                                        "description": "Subject of case (username)",
                                        "key": "subject",
                                        "order": 1,
                                        "primary": true,
                                        "required": false
                                    }
                                },
                                "product_name": "Code42",
                                "product_vendor": "Code42",
                                "targets": "8",
                                "type": "generic"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "create case"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def create_case_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('create_case_1() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'create_case_1' call\n    results_data_1 = phantom.collect2(container=container, datapath=['get_alert_details_1:action_result.data.*.actor', 'get_alert_details_1:action_result.parameter.context.artifact_id'], action_results=results)\n    results_data_2 = phantom.collect2(container=container, datapath=['prompt_further_investigation:action_result.summary.responses.1', 'prompt_further_investigation:action_result.parameter.context.artifact_id'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'create_case_1' call\n    for results_item_1 in results_data_1:\n        for results_item_2 in results_data_2:\n            if results_item_2[0]:\n                parameters.append({\n                    'subject': results_item_1[0],\n                    'assignee': \"\",\n                    'findings': \"\",\n                    'case_name': results_item_2[0],\n                    'description': \"\",\n                    # context (artifact id) is added to associate results with the artifact\n                    'context': {'artifact_id': results_item_1[1]},\n                })\n\n    phantom.act(action=\"create case\", parameters=parameters, assets=['code42'], callback=add_case_event_1, name=\"create_case_1\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "prompt further investigation",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": "0",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "8f2701fe-1eb3-4fd3-9ec7-82a57189b7a6",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 115,
                        "line_start": 86,
                        "message": "Configuring now",
                        "name": "create case",
                        "notes": "",
                        "number": 1,
                        "order": 5,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -380,
                            "y": 60
                        },
                        "previous_function": "",
                        "previous_name": "create_case_1",
                        "required_params": {
                            "case_name": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 306
                    },
                    {
                        "0": "S",
                        "1": "T",
                        "2": "A",
                        "3": "R",
                        "4": "T",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "ref-x": 33,
                                "ref-y": 8,
                                "text": "START"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "ref-x": 13,
                                "xlink:href": "/inc/coa/img/block_icon_start.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_start(container):\n    phantom.debug('on_start() called')\n    \n    # call 'filter_1' block\n    filter_1(container=container)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "d81dbe5f-6ab7-4fba-9acc-d7df2f6c1f96",
                        "inPorts": [],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 15,
                        "line_start": 7,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 1,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -1200,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "START",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 307
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 1
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def filter_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('filter_1() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        conditions=[\n            [\"artifact:*.name\", \"==\", \"Code42 File Event Artifact\"],\n        ],\n        name=\"filter_1:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        get_alert_details_1(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "52078354-7662-4ec0-b7a0-ff39b7af8202",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 86,
                        "line_start": 69,
                        "name": "filter",
                        "notes": "",
                        "number": 1,
                        "order": 4,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "artifact:*.name",
                                        "value": "Code42 File Event Artifact"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -1060,
                            "y": 60
                        },
                        "previous_function": "",
                        "previous_name": "filter_1",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 308
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "00ac978b-5372-48db-9887-bf6caa791431",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "8249ec45-73ee-47ac-8a44-3064cb339b59",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "b1c36c35-584d-412c-999c-6f43ee18b010",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 309
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "f8bff0d3-fdcc-43a0-a703-d61197a9c587",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "b1c36c35-584d-412c-999c-6f43ee18b010",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "8f2701fe-1eb3-4fd3-9ec7-82a57189b7a6",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 317
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 4
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def decision_4(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_4() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"prompt_further_investigation:action_result.summary.responses.0\", \"==\", \"Yes\"],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        create_case_1(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # call connected blocks for 'else' condition 2\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "prompt further investigation",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": true,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "b1c36c35-584d-412c-999c-6f43ee18b010",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 615,
                        "line_start": 595,
                        "name": "decision",
                        "notes": "",
                        "number": 4,
                        "order": 22,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "prompt_further_investigation:action_result.summary.responses.0",
                                        "value": "Yes"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -540,
                            "y": 60
                        },
                        "previous_function": "",
                        "previous_name": "decision_4",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 318
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "9fc28221-01ae-4398-b8d9-06a3c02b7bb6",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "b1c36c35-584d-412c-999c-6f43ee18b010",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "cef4f5e2-0158-4bf4-a297-cca176bd134b",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 319
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "approver": "admin",
                        "approver_display": "admin",
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 1
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def prompt_further_investigation(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('prompt_further_investigation() called')\n    \n    # set user and message variables for phantom.prompt call\n    user = \"admin\"\n    message = \"\"\"Further Investigation Needed for alert {0}?\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"get_alert_details_1:action_result.data.*.name\",\n    ]\n\n    #responses:\n    response_types = [\n        {\n            \"prompt\": \"Further investigate?\",\n            \"options\": {\n                \"type\": \"list\",\n                \"choices\": [\n                    \"Yes\",\n                    \"No\",\n                ]\n            },\n        },\n        {\n            \"prompt\": \"Case name\",\n            \"options\": {\n                \"type\": \"message\",\n            },\n        },\n    ]\n\n    phantom.prompt2(container=container, user=user, message=message, respond_in_mins=30, name=\"prompt_further_investigation\", parameters=parameters, response_types=response_types, callback=decision_4)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "connected_to_start": true,
                        "connection_name": "get alert details",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "prompt further investigation",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "8249ec45-73ee-47ac-8a44-3064cb339b59",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 69,
                        "line_start": 33,
                        "message": "Further Investigation Needed for alert {0}?",
                        "name": "prompt",
                        "notes": "",
                        "number": 1,
                        "order": 3,
                        "outPorts": [
                            "out"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "get_alert_details_1:action_result.data.*.name"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -680,
                            "y": 60
                        },
                        "previous_function": "",
                        "previous_name": "prompt_further_investigation",
                        "respond_in": "30",
                        "response_key": "Message",
                        "response_options": [],
                        "response_type": "list",
                        "responses": [
                            {
                                "response_key": "Yes/No",
                                "response_options": [
                                    "Yes",
                                    "No"
                                ],
                                "response_prompt": "Further investigate?",
                                "response_type": "list"
                            },
                            {
                                "response_key": "Message",
                                "response_options": [],
                                "response_prompt": "Case name",
                                "response_type": "message"
                            }
                        ],
                        "show_number": true,
                        "size": {
                            "height": 80,
                            "width": 80
                        },
                        "state": "prompt",
                        "status": "",
                        "type": "coa.Prompt",
                        "warn": false,
                        "z": 320
                    }
                ]
            },
            "notes": ""
        },
        "python_version": "3",
        "schema": 4,
        "version": "4.10.3.51237"
    },
    "create_time": "2021-06-25T19:16:24.050728+00:00",
    "draft_mode": false,
    "labels": [
        "code42 alerts"
    ],
    "tags": []
}